# 封装：即在设计类时，刻意的将一些属性和方法隐藏在类的内部，这样在使用此类时，将无法直接以
# 类对象.属性名（或类对象.方法名（参数））的形式调用，而只能用魏银仓的类方法间接操作这些隐藏的属性和方法。
# 封装绝不是将类中所有的方法都隐藏起来，一定要留一些像键盘、鼠标这样可供外界使用的类方法。

# 封装的好处？
# 首先，封装机制保证了类内部数据结构的完整性，因为使用类的用户无法直接看到类中的数据结构，
# 只能使用类允许公开的数据，很好地避免了外部对内部数据的影响，提高了程序的可维护性
# 除此之外，对一个类实现良好的封装，用户只能借助暴露出来的类方法来访问数据，我们只需要在这些暴露的方法中加入适当的控制逻辑，
# 即可轻松实现用户对类中属性或方法的不合理操作。
# 并且，对类进行良好的封装，还可以提高代码的复用性。
# public，private 属性： 不存在public，private关键字
#   默认情况下，Python 类中的变量和方法都是公有（public）的，它们的名称前都没有下划线（_）；
#   如果类中的变量和函数，其名称以双下划线“__”开头，则该变量（函数）为私有变量（私有函数），其属性等同于 private。
# 注意：python中还有以双下划綫开通和结尾的类方法（类似于__init__构造函数）这些是python内部定义的，用于python内部调用。
